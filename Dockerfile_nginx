ARG NODE_VERSION=20.11.0

FROM node:$NODE_VERSION-alpine AS node
FROM nginx:stable-alpine

# Copy binaries from node container with pre-defined node version to nginx
COPY --from=node /usr/lib /usr/lib
COPY --from=node /usr/local/share /usr/local/share
COPY --from=node /usr/local/lib /usr/local/lib
COPY --from=node /usr/local/include /usr/local/include
COPY --from=node /usr/local/bin /usr/local/bin


COPY certificates/adp_rootca.crt /usr/local/share/ca-certificates/adp_rootca.crt
RUN update-ca-certificates --fresh

RUN apk update && apk upgrade

RUN apk add \
    yarn

COPY docker-nginx/default.template /tmp/default.template
COPY --chown=nginx ./public /var/www/public

COPY --chown=nginx ./assets /var/www/assets
COPY --chown=nginx ./package.json /var/www/package.json
COPY --chown=nginx ./yarn.lock /var/www/yarn.lock
COPY --chown=nginx ./webpack.config.js /var/www/webpack.config.js

WORKDIR /var/www
RUN yarn config set strict-ssl false
RUN yarn --ignore-scripts --ignore-platform && yarn encore prod

CMD envsubst '$FASTCGI_PASS' < /tmp/default.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'

EXPOSE 80
